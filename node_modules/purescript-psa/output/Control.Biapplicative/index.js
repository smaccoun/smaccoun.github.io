// Generated by psc version 0.10.7
"use strict";
var Control_Biapply = require("../Control.Biapply");

// | `Biapplicative` captures type constructors of two arguments which support lifting of

// | functions of zero or more arguments, in the sense of `Applicative`.
var Biapplicative = function (__superclass_Control$dotBiapply$dotBiapply_0, bipure) {
    this["__superclass_Control.Biapply.Biapply_0"] = __superclass_Control$dotBiapply$dotBiapply_0;
    this.bipure = bipure;
};

// | `Biapplicative` captures type constructors of two arguments which support lifting of

// | functions of zero or more arguments, in the sense of `Applicative`.
var bipure = function (dict) {
    return dict.bipure;
};
module.exports = {
    Biapplicative: Biapplicative, 
    bipure: bipure
};
