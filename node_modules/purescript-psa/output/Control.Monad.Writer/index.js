// Generated by psc version 0.10.7

// | This module defines the `Writer` monad.
"use strict";
var Prelude = require("../Prelude");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class");
var Control_Monad_Writer_Trans = require("../Control.Monad.Writer.Trans");
var Data_Identity = require("../Data.Identity");
var Data_Newtype = require("../Data.Newtype");
var Data_Tuple = require("../Data.Tuple");
var Control_Semigroupoid = require("../Control.Semigroupoid");

// | Run a computation in the `Writer` monad
var runWriter = function ($0) {
    return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(Control_Monad_Writer_Trans.runWriterT($0));
};

// | Change the result and accumulator types in a `Writer` monad action
var mapWriter = function (f) {
    return Control_Monad_Writer_Trans.mapWriterT(function ($1) {
        return Data_Identity.Identity(f(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($1)));
    });
};

// | Run a computation in the `Writer` monad, discarding the result
var execWriter = function (m) {
    return Data_Tuple.snd(runWriter(m));
};
module.exports = {
    execWriter: execWriter, 
    mapWriter: mapWriter, 
    runWriter: runWriter
};
