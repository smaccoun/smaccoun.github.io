// Generated by psc version 0.10.7
"use strict";
var Control_Extend = require("../Control.Extend");
var Data_Functor = require("../Data.Functor");

// | `Comonad` extends the `Extend` class with the `extract` function

// | which extracts a value, discarding the comonadic context.

// |

// | `Comonad` is the dual of `Monad`, and `extract` is the dual of `pure`.

// |

// | Laws:

// |

// | - Left Identity: `extract <<= xs = xs`

// | - Right Identity: `extract (f <<= xs) = f xs`
var Comonad = function (__superclass_Control$dotExtend$dotExtend_0, extract) {
    this["__superclass_Control.Extend.Extend_0"] = __superclass_Control$dotExtend$dotExtend_0;
    this.extract = extract;
};

// | `Comonad` extends the `Extend` class with the `extract` function

// | which extracts a value, discarding the comonadic context.

// |

// | `Comonad` is the dual of `Monad`, and `extract` is the dual of `pure`.

// |

// | Laws:

// |

// | - Left Identity: `extract <<= xs = xs`

// | - Right Identity: `extract (f <<= xs) = f xs`
var extract = function (dict) {
    return dict.extract;
};
module.exports = {
    Comonad: Comonad, 
    extract: extract
};
